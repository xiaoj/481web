{
  "survey": [
    {
      "type": "select_multiple",
      "name": "examples",
      "label": "Which examples would you like to see?",
      "_rowNum": 2,
      "param": "examples"
    },
    {
      "type": "goto",
      "condition": "not(selected(data('examples'), 'error'))",
      "_rowNum": 3,
      "param": "error_end"
    },
    {
      "type": "select_one",
      "name": "error",
      "label": "Trigger an error on the next screen?",
      "hint": "Error prompts are useful for finding bugs in forms with lots of branching.",
      "_rowNum": 4,
      "param": "yesno"
    },
    {
      "type": "error",
      "condition": "selected(data('error'), 'yes')",
      "_rowNum": 5
    },
    {
      "type": "label",
      "_rowNum": 6,
      "param": "error_end"
    },
    {
      "type": "goto",
      "condition": "not(selected(data('examples'), 'intents'))",
      "_rowNum": 7,
      "param": "intents_end"
    },
    {
      "type": "barcode",
      "name": "barcode",
      "label": "Scan a barcode",
      "_rowNum": 8
    },
    {
      "type": "geopoint",
      "name": "geopoint",
      "label": "Capture your location",
      "_rowNum": 9
    },
    {
      "type": "image",
      "name": "picture",
      "label": "Take a picture",
      "_rowNum": 10
    },
    {
      "type": "audio",
      "name": "recording",
      "label": "Make a recording",
      "_rowNum": 11
    },
    {
      "type": "label",
      "_rowNum": 12,
      "param": "intents_end"
    },
    {
      "type": "goto",
      "condition": "not(selected(data('examples'), 'label_features'))",
      "_rowNum": 13,
      "param": "label_features_end"
    },
    {
      "type": "note",
      "label": "<u>Labels</u> <i>can</i> contain <span style=\"color:red;\">HTML</span>",
      "hint": "So can <b>hints</b>",
      "_rowNum": 14
    },
    {
      "type": "note",
      "label": "Labels can contain <img> and <audio> HTML tags, but it is often easier to add media via the image and audio columns.",
      "audio": "audio/carrioncrow.mp3",
      "image": "img/dolphin.png",
      "_rowNum": 15
    },
    {
      "type": "text",
      "name": "name",
      "label": "Enter your name",
      "hint": "It will be used in the next question.",
      "_rowNum": 16
    },
    {
      "type": "note",
      "label": "<h3>\nThis label uses Handlesbars template features:\n</h3>\n{{#if name}}\nHello {{name}}!\n{{else}}\nName not entered.\n{{/if}}",
      "hint": "Handlebars templates allow labels to change depending on the values previously entered.",
      "_rowNum": 17
    },
    {
      "type": "label",
      "_rowNum": 18,
      "param": "label_features_end"
    },
    {
      "type": "integer",
      "condition": "selected(data('examples'), 'dynamic_defaults')",
      "name": "avg_coffee",
      "label": "On average, how many cups of coffee do you drink in a day?",
      "_rowNum": 19
    },
    {
      "type": "integer",
      "condition": "selected(data('examples'), 'dynamic_defaults')",
      "name": "coffee_today",
      "label": "How many cups of coffee did you drink today?",
      "default": "data('avg_coffee')",
      "_rowNum": 20
    },
    {
      "type": "goto",
      "condition": "not(selected(data('examples'), 'datetime'))",
      "_rowNum": 21,
      "param": "datetime_end"
    },
    {
      "type": "date",
      "name": "born",
      "label": "When were you born?",
      "_rowNum": 22
    },
    {
      "type": "note",
      "condition": "data('born') && data('born').getDay() === now().getDay() && data('born').getMonth() === now().getMonth()",
      "label": "Happy Birthday!",
      "hint": "This prompt shows how to use dates in fomulas.",
      "_rowNum": 23
    },
    {
      "type": "time",
      "name": "time",
      "label": "What time do you usually wake up?",
      "_rowNum": 24
    },
    {
      "type": "datetime",
      "name": "datetime",
      "label": "When will you be available for a follow up survey?",
      "_rowNum": 25
    },
    {
      "type": "label",
      "_rowNum": 26,
      "param": "datetime_end"
    },
    {
      "type": "geopoint",
      "condition": "selected(data('examples'), 'geopoint')",
      "name": "location",
      "label": "Record your location:",
      "_rowNum": 27
    },
    {
      "type": "screen",
      "condition": "selected(data('examples'), 'screen_group')",
      "_rowNum": 28,
      "prompts": [
        {
          "type": "select_multiple",
          "name": "visited_continents",
          "label": "Which continents have you visited?",
          "_rowNum": 29,
          "param": "continents"
        },
        {
          "type": "select_one",
          "condition": "calculates.ask_about_seattle()",
          "name": "visited_seattle",
          "label": "Have you visited Seattle?",
          "required": true,
          "_rowNum": 30,
          "param": "yesno"
        }
      ]
    },
    {
      "type": "goto",
      "condition": "not(selected(data('examples'), 'media'))",
      "_rowNum": 32,
      "param": "media_end"
    },
    {
      "type": "screen",
      "_rowNum": 33,
      "prompts": [
        {
          "type": "audio",
          "name": "audio_test",
          "label": "Make a recording:",
          "_rowNum": 34
        },
        {
          "type": "video",
          "name": "video_test",
          "label": "Take a video:",
          "_rowNum": 35
        },
        {
          "type": "image",
          "name": "image_test",
          "label": "Take a picture:",
          "_rowNum": 36
        }
      ]
    },
    {
      "type": "label",
      "_rowNum": 38,
      "param": "media_end"
    },
    {
      "type": "note",
      "condition": "selected(data('examples'), 'prompt_link')",
      "label": "<a href=\"{{promptLink \"unreachable\"}}\">This is a link to another prompt</a>",
      "_rowNum": 39
    },
    {
      "type": "label",
      "_rowNum": 40,
      "param": "prompt_link_return"
    },
    {
      "type": "goto",
      "_rowNum": 41,
      "param": "unreachable_end"
    },
    {
      "type": "note",
      "name": "unreachable",
      "label": "This prompt is unreachable except by links.",
      "_rowNum": 42
    },
    {
      "type": "goto",
      "_rowNum": 43,
      "param": "prompt_link_return"
    },
    {
      "type": "label",
      "_rowNum": 44,
      "param": "unreachable_end"
    },
    {
      "type": "screen",
      "condition": "selected(data('examples'), 'custom_template')",
      "_rowNum": 45,
      "prompts": [
        {
          "type": "note",
          "label": "The following data will be used to generate a weight for age plot.",
          "_rowNum": 46
        },
        {
          "type": "integer",
          "name": "age",
          "label": "Enter age (in years):",
          "hint": "Must be less than 20.",
          "constraint": "data('age') <= 20",
          "constraint_message": "The growth chart only has data for below 20 years. This age you entered will not fit on the plot.",
          "_rowNum": 47
        },
        {
          "type": "decimal",
          "name": "weight",
          "label": "Enter weight (in lbs):",
          "_rowNum": 48
        },
        {
          "type": "select_one",
          "name": "sex",
          "label": "Enter sex:",
          "_rowNum": 49,
          "param": "sexes"
        }
      ]
    },
    {
      "type": "note",
      "condition": "selected(data('examples'), 'custom_template')",
      "name": "specialTemplateTest",
      "label": "This is a custom template that uses D3.js to plot an age and weight on a growth chart:",
      "templatePath": "ageWeightPlot.handlebars",
      "_rowNum": 51
    },
    {
      "type": "integer",
      "name": "rating",
      "label": "How would you rate this survey?",
      "hint": "1 is very bad. 10 is very good.",
      "default": 5,
      "inputAttributes": {
        "type": "range",
        "min": 1,
        "max": 10
      },
      "_rowNum": 52
    }
  ],
  "calculates": [
    {
      "name": "ask_about_seattle",
      "calculation": "selected(data('visited_continents'), 'NorthAmerica')",
      "_rowNum": 2
    }
  ],
  "choices": {
    "yesno": [
      {
        "list_name": "yesno",
        "name": "yes",
        "label": "yes",
        "_rowNum": 2
      },
      {
        "list_name": "yesno",
        "name": "no",
        "label": "no",
        "_rowNum": 3
      }
    ],
    "continents": [
      {
        "list_name": "continents",
        "name": "NorthAmerica",
        "label": "North America",
        "_rowNum": 4
      },
      {
        "list_name": "continents",
        "name": "SouthAmerica",
        "label": "South America",
        "_rowNum": 5
      },
      {
        "list_name": "continents",
        "name": "Europe",
        "label": "Europe",
        "_rowNum": 6
      },
      {
        "list_name": "continents",
        "name": "Africa",
        "label": "Africa",
        "_rowNum": 7
      },
      {
        "list_name": "continents",
        "name": "Asia",
        "label": "Asia",
        "_rowNum": 8
      },
      {
        "list_name": "continents",
        "name": "Australia",
        "label": "Australia",
        "_rowNum": 9
      },
      {
        "list_name": "continents",
        "name": "Antarctica",
        "label": "Antarctica",
        "_rowNum": 10
      }
    ],
    "examples": [
      {
        "list_name": "examples",
        "name": "error",
        "label": "error",
        "_rowNum": 12
      },
      {
        "list_name": "examples",
        "name": "intents",
        "label": "intent launching",
        "_rowNum": 13
      },
      {
        "list_name": "examples",
        "name": "label_features",
        "label": "label features",
        "_rowNum": 14
      },
      {
        "list_name": "examples",
        "name": "dynamic_defaults",
        "label": "computed default values",
        "_rowNum": 15
      },
      {
        "list_name": "examples",
        "name": "datetime",
        "label": "datetime",
        "_rowNum": 16
      },
      {
        "list_name": "examples",
        "name": "geopoint",
        "label": "geopoint",
        "_rowNum": 17
      },
      {
        "list_name": "examples",
        "name": "media",
        "label": "media",
        "_rowNum": 18
      },
      {
        "list_name": "examples",
        "name": "screen_group",
        "label": "screen group with select and calculate",
        "_rowNum": 19
      },
      {
        "list_name": "examples",
        "name": "custom_template",
        "label": "custom template",
        "_rowNum": 20
      },
      {
        "list_name": "examples",
        "name": "prompt_link",
        "label": "prompt linking",
        "_rowNum": 21
      }
    ],
    "sexes": [
      {
        "list_name": "sexes",
        "name": "male",
        "label": "male",
        "_rowNum": 23
      },
      {
        "list_name": "sexes",
        "name": "female",
        "label": "female",
        "_rowNum": 24
      }
    ]
  },
  "settings": [
    {
      "setting": "form_id",
      "value": "exampleForm",
      "_rowNum": 2
    },
    {
      "setting": "form_version",
      "value": 20130408,
      "_rowNum": 3
    },
    {
      "setting": "form_title",
      "value": "Example Form",
      "_rowNum": 4
    }
  ],
  "model": {
    "examples": {
      "type": "array",
      "isPersisted": true,
      "items": {
        "type": "string"
      }
    },
    "error": {
      "type": "string"
    },
    "barcode": {
      "type": "string"
    },
    "geopoint": {
      "name": "geopoint",
      "type": "object",
      "elementType": "geopoint",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "altitude": {
          "type": "number"
        },
        "accuracy": {
          "type": "number"
        }
      }
    },
    "picture": {
      "type": "object",
      "elementType": "mimeUri",
      "isPersisted": true,
      "properties": {
        "uri": {
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "default": "image/*"
        }
      }
    },
    "recording": {
      "type": "object",
      "elementType": "mimeUri",
      "isPersisted": true,
      "properties": {
        "uri": {
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "default": "audio/*"
        }
      }
    },
    "name": {
      "type": "string"
    },
    "avg_coffee": {
      "type": "integer"
    },
    "coffee_today": {
      "type": "integer"
    },
    "born": {
      "type": "object",
      "elementType": "date"
    },
    "time": {
      "type": "object",
      "elementType": "time"
    },
    "datetime": {
      "type": "object",
      "elementType": "dateTime"
    },
    "location": {
      "name": "geopoint",
      "type": "object",
      "elementType": "geopoint",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "altitude": {
          "type": "number"
        },
        "accuracy": {
          "type": "number"
        }
      }
    },
    "visited_continents": {
      "type": "array",
      "isPersisted": true,
      "items": {
        "type": "string"
      }
    },
    "visited_seattle": {
      "type": "string"
    },
    "audio_test": {
      "type": "object",
      "elementType": "mimeUri",
      "isPersisted": true,
      "properties": {
        "uri": {
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "default": "audio/*"
        }
      }
    },
    "video_test": {
      "type": "object",
      "elementType": "mimeUri",
      "isPersisted": true,
      "properties": {
        "uri": {
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "default": "video/*"
        }
      }
    },
    "image_test": {
      "type": "object",
      "elementType": "mimeUri",
      "isPersisted": true,
      "properties": {
        "uri": {
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "default": "image/*"
        }
      }
    },
    "age": {
      "type": "integer"
    },
    "weight": {
      "type": "number"
    },
    "sex": {
      "type": "string"
    },
    "rating": {
      "type": "integer"
    }
  }
}
